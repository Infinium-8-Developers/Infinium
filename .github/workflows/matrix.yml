name: Build
on:
  push:
  pull_request:
  release:
    types: [published]
 
env:
  TAG: ${{ github.ref }}

jobs:
# Common Build matrix for builds on Ubuntu Lasted VM       
  ubuntu_now_build:
    name: ${{ matrix.build_name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # Add more compilers here if you need them
        build_name: ['Ubuntu 20.04 - GCC 8']
        include:
          - build_name: 'Ubuntu 20.04 - GCC 8'
            package_name: 'gcc-8 g++-8'
            cc: gcc-8
            cxx: g++-8
            label: ubuntu-20.04-linux
            deployable: true
    env:
      CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
      LABEL: ${{ matrix.label }}
    steps:
      - uses: actions/checkout@v2

      # Fetch Dependencies
      - name: Dependencies
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt-get install -y curl build-essential python3-dev autotools-dev libicu-dev libbz2-dev cmake git screen checkinstall zlib1g-dev ${{ matrix.package_name }}
          curl -OL https://boostorg.jfrog.io/artifactory/main/release/1.70.0/source/boost_1_70_0.tar.bz2
          tar -xjf boost_1_70_0.tar.bz2
          cd boost_1_70_0
          ./bootstrap.sh --with-libraries=system,filesystem,thread,date_time,chrono,regex,serialization,atomic,program_options,locale,timer,log
          ./b2
          cd ..
      - name: Setup ccache
        run: |
          sudo apt install ccache
      - name: Retrieve ccache
        uses: actions/cache@v1
        with:
          path: .ccache
          key: ccache-${{ matrix.label }}     
     
     # Configure the project with cmake
      - name: Configure
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: |
          mkdir build && cd build
          cmake  -D BOOST_ROOT=/home/runner/work/Infinium/Infinium/boost_1_70_0 -D BUILD_GUI=OFF -D STATIC=true -D CMAKE_BUILD_TYPE=Release -D BUILD_TESTS=OFF ..
      # Build for linux
      - name: Build
        run: |
          cd build
          make  
